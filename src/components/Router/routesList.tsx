import {ReactNode} from "react";
import {CustomizationPage, EPageType} from "../pages/СustomizationPage/СustomizationPage";
import {Navigate} from "react-router-dom";

export interface IRoute {
    path: string,
    name: string
    component: ReactNode
    routes?: IRoute[]
}


export const routesList: IRoute[] = [
    {path: '/', name: 'Статистика', component: null},

    {
        path: `customization/graphs`,
        name: 'Графы',
        component: <Navigate to={`/customization/graphs/${EPageType.table}`}/>
    },
    {
        path: `customization/graphs/${EPageType.table}`,
        name: 'Таблица графов',
        component: <CustomizationPage/>
    },
    {
        path: `customization/graphs/${EPageType.view}`,
        name: 'Граф',
        component: <CustomizationPage/>
    },
    {
        path: `customization/graphs/${EPageType.edit}`,
        name: 'Настройка графа',
        component: <CustomizationPage/>
    },
    {
        path: `customization/graphs/${EPageType.add}`,
        name: 'Добавление графа',
        component: <CustomizationPage/>
    },
]

const mapRoutesListPaths = (routesList: IRoute[]): string[] => {
    const resultArr: string[] = []

    routesList.map((item) => {
        resultArr.push(item.path)
        if (item.routes) {
            resultArr.push(...mapRoutesListPaths(item.routes))
        }
    })

    return resultArr
}

const mapRoutesListNames = (routesList: IRoute[]): [string, string][] => {
    const resultArr: [string, string][] = []

    routesList.map((item) => {
        resultArr.push([item.path, item.name])
        if (item.routes) {
            resultArr.push(...mapRoutesListNames(item.routes))
        }
    })

    return resultArr
}
export const autoGeneratedRoutesListMap = new Map(mapRoutesListNames(routesList))
export const autoGeneratedAllowedLinks = mapRoutesListPaths(routesList)